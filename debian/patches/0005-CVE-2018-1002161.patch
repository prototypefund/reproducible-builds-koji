From bdec8c7399802c0bc0713f36c4aac02b3a79486a Mon Sep 17 00:00:00 2001
From: Mike McLean <mikem@redhat.com>
Date: Feb 21 2019 14:39:54 +0000
Subject: PR#1274: cve-2018-1002161


Merges #1274
https://pagure.io/koji/pull-request/1274

Fixes: #1183
https://pagure.io/koji/issue/1183
fix query parameter processing in multiple calls

---

Index: koji/hub/kojihub.py
===================================================================
--- koji.orig/hub/kojihub.py
+++ koji/hub/kojihub.py
@@ -3709,8 +3709,10 @@ def list_archives(buildID=None, buildroo
                     val = typeInfo[key]
                     if not isinstance(val, (list, tuple)):
                         val = [val]
-                    for v in val:
-                        clauses.append(r"""%s ~ E'\\m%s\\M'""" % (key, v))
+                    for i, v in enumerate(val):
+                        pkey = '%s_pattern_%i' % (key, i)
+                        values[pkey] = r'\m%s\M' % v
+                        clauses.append('%s ~ %%(%s)s' % (key, pkey))
     elif type == 'image':
         joins.append('image_archives ON archiveinfo.id = image_archives.archive_id')
         fields.append(['image_archives.arch', 'arch'])
@@ -4907,13 +4909,15 @@ def get_archive_type(filename=None, type
         raise koji.GenericError, 'one of filename, type_name, or type_id must be specified'
 
     parts = filename.split('.')
-
+    query = QueryProcessor(
+            tables=['archivetypes'],
+            columns=['id', 'name', 'description', 'extensions'],
+            clauses=['extensions ~* %(pattern)s'],
+            )
     for start in range(len(parts)-1, -1, -1):
         ext = '.'.join(parts[start:])
-
-        select = r"""SELECT id, name, description, extensions FROM archivetypes
-                      WHERE extensions ~ E'\\m%s\\M'""" % ext
-        results = _multiRow(select, locals(), ('id', 'name', 'description', 'extensions'))
+        query.values['pattern'] = r'(\s|^)%s(\s|$)' % ext
+        results = query.execute()
 
         if len(results) == 1:
             return results[0]
@@ -9164,8 +9168,8 @@ class RootExports(object):
             # matching 'ppc64'
             if not (isinstance(arches, list) or isinstance(arches, tuple)):
                 arches = [arches]
-            archClause = [r"""arches ~ E'\\m%s\\M'""" % arch for arch in arches]
-            clauses.append('(' + ' OR '.join(archClause) + ')')
+            archPattern = r'\m(%s)\M' % '|'.join(arches)
+            clauses.append('arches ~ %(archPattern)s')
         if channelID != None:
             joins.append('host_channels on host.id = host_channels.host_id')
             clauses.append('host_channels.channel_id = %(channelID)i')
